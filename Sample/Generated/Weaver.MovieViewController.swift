/// This file is generated by Weaver 0.10.1
/// DO NOT EDIT!
import Foundation
import UIKit
// MARK: - MovieViewController
protocol MovieViewControllerInputDependencyResolver {
    var urlSession: URLSession { get }
}
protocol MovieViewControllerDependencyResolver {
    var movie: Movie { get }
    var urlSession: URLSession { get }
    var imageManager: ImageManager { get }
    func reviewController(movieID: UInt) -> WSReviewViewController
}
final class MovieViewControllerDependencyContainer: MovieViewControllerDependencyResolver {
    let movie: Movie
    let urlSession: URLSession
    private var _imageManager: ImageManager?
    var imageManager: ImageManager {
        if let value = _imageManager { return value }
        let dependencies = ImageManagerDependencyContainer(injecting: self)
        let value = ImageManager(injecting: dependencies)
        _imageManager = value
        return value
    }
    func reviewController(movieID: UInt) -> WSReviewViewController {
        let dependencies = WSReviewViewControllerDependencyContainer(injecting: self, movieID: movieID)
        let value = WSReviewViewController(injecting: dependencies)
        return value
    }
    init(injecting dependencies: MovieViewControllerInputDependencyResolver, movie: Movie) {
        self.movie = movie
        urlSession = dependencies.urlSession
        _ = imageManager
    }
}
extension MovieViewControllerDependencyContainer: ImageManagerInputDependencyResolver {}
extension MovieViewControllerDependencyContainer: WSReviewViewControllerInputDependencyResolver {}